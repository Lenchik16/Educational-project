import sqlite3
import sys
import os

def delete_program(program_name):
    """–£–¥–∞–ª—è–µ—Ç –ø—Ä–æ–≥—Ä–∞–º–º—É –∏ –≤—Å–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –±–∞–∑—ã"""
    try:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        if not os.path.exists('undergraduate_programs.db'):
            print("‚ùå –û—à–∏–±–∫–∞: –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö 'undergraduate_programs.db' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return False

        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        conn = sqlite3.connect('undergraduate_programs.db')
        cursor = conn.cursor()
        cursor.execute("PRAGMA foreign_keys = ON;")  # –í–∫–ª—é—á–µ–Ω–∏–µ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –≤–Ω–µ—à–Ω–∏—Ö –∫–ª—é—á–µ–π

        # –ü–æ–∏—Å–∫ ID –ø—Ä–æ–≥—Ä–∞–º–º—ã –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
        cursor.execute(
            "SELECT id FROM programs WHERE name = ? COLLATE NOCASE", 
            (program_name,)
        )
        program = cursor.fetchone()
        
        # –ï—Å–ª–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞
        if not program:
            print(f"üîç –ü—Ä–æ–≥—Ä–∞–º–º–∞ '{program_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –°–ø–∏—Å–æ–∫ –ø—Ä–æ–≥—Ä–∞–º–º:")
            cursor.execute("SELECT name FROM programs")
            for row in cursor.fetchall():
                print(f"‚Üí {row[0]}")
            return False

        program_id = program[0]

        # –°–ø–∏—Å–æ–∫ —Ç–∞–±–ª–∏—Ü –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ (–¥–æ—á–µ—Ä–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã + —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∞—è)
        tables = [
            'contacts',          # –ö–æ–Ω—Ç–∞–∫—Ç—ã
            'budget_places',     # –ë—é–¥–∂–µ—Ç–Ω—ã–µ –º–µ—Å—Ç–∞
            'min_scores',        # –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –±–∞–ª–ª—ã
            'passing_scores',    # –ü—Ä–æ—Ö–æ–¥–Ω—ã–µ –±–∞–ª–ª—ã
            'disciplines',       # –î–∏—Å—Ü–∏–ø–ª–∏–Ω—ã
            'professions',       # –ü—Ä–æ—Ñ–µ—Å—Å–∏–∏
            'practice_places',   # –ú–µ—Å—Ç–∞ –ø—Ä–∞–∫—Ç–∏–∫–∏
            'employment_orgs',   # –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –¥–ª—è —Ç—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
            'programs'           # –†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∞—è —Ç–∞–±–ª–∏—Ü–∞
        ]

        # –£–¥–∞–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ç–∞–±–ª–∏—Ü
        deleted = {}
        for table in tables:
            if table == 'programs':
                query = "DELETE FROM programs WHERE id = ?"
            else:
                query = f"DELETE FROM {table} WHERE program_id = ?"
            
            cursor.execute(query, (program_id,))
            deleted[table] = cursor.rowcount

        # –§–∏–∫—Å–∞—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
        conn.commit()
        
        # –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —É–¥–∞–ª–µ–Ω–∏—è
        print("\n‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç —É–¥–∞–ª–µ–Ω–∏—è:")
        print(f"–ü—Ä–æ–≥—Ä–∞–º–º–∞: {program_name}")
        for table, count in deleted.items():
            if table != 'programs' and count > 0:
                print(f"- –£–¥–∞–ª–µ–Ω–æ –∏–∑ {table}: {count} –∑–∞–ø–∏—Å–µ–π")

        return True

    except sqlite3.Error as e:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        print(f"üö® –û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {str(e)}")
        conn.rollback()
        return False
    finally:
        # –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
        if 'conn' in locals():
            conn.close()

if __name__ == "__main__":
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    if len(sys.argv) != 2:
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python delete.py \"–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã\"")
        sys.exit(1)
    
    program_name = sys.argv[1]
    print(f"–ü–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã: {program_name}")
    if delete_program(program_name):
        print("‚úÖ –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ")
    else:
        print("‚ùå –£–¥–∞–ª–µ–Ω–∏–µ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ")
        sys.exit(1)